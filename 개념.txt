현실 객체 : 현실에 존재하는 모든 것 ex) 사람, 건물, 먼지, 음식 등등

객체 지향 언어 : 서로 구분 지정되어 있는 객체들간에 상호작용을 하는 코드를 작성하는 프로그램 언어

자바 객체 : 필드(속성)와 메서드(기능)을 지니고 있는 class

class : 객체로서 필드(속성)나 메서드(기능)을 새롭게 정의할 수 있는 영역

new 연산자 : 해당 클래스를 불러와 메모리 내 Heap 영역에 참조주소값을 할당하는 것

추상화 : 공통된 것을 묶고 자세한 것들은 제외시키는 것

캡슐화 : 외부로부터 데이터를 보호하고, 여러 데이터를 한 곳으로 묵는 것

캡슐화 원칙 : 데이터 직접접근 변경금지

메서드/기능의 정의란 : 클래스 내의 필드값을 새롭게 정의 또는 변경하거나 해당 클래스가 어떠한 특정 행위를 수행할 수 있게 해주는 것

메서드의 호출이란 : 

return : return 오른쪽에 작성된 해당 코드값을 반환하겠다는 것.

public String ex10 {
	return "Hi";
}
위 메서드 상세히 해석 : ex10 이라는 이름을 가졌고 String 타입 값 반환형이며 모두가 사용할 수 있는 공용의 함수, 그리고 함수를 수행했을 때 "Hi" String 값을 반환한다.

------------------ 답지 ------------------ 

현실 객체 : 속성과 기능을 가진 독립적으로 인식되는 모든 것

객체 지향 언어 : 객체간의 상호작용에 대한 개념을 컴퓨터로 옮겨 만들어낸 것

자바 객체 : 클래스에 정의된 내용대로 new 연산자를 통해 메모리 영역에 생성한 것

class : 객체의 속성과 기능에 대한 정의를 한 것 (설계도)

new 연산자 : new 연산자를 이용하면 Heap 메모리 영역에 객체가 생성된다

추상화 : 공통점만 추출하고, 불필요한 부분을 제거하는 과정

캡슐화 : 속성과 기능을 하나로 묶어 관리할 수 있고, 데이터의 직접접근제한을 원칙으로 함.
	대신 간접접근 할 수 있도록 클래스 내부에 getter/setter 메서드를 작성

캡슐화 원칙 : 
1) 멤버변수에 대한 접근 권한은 private을 원칙으로 함
2) 멤버변수에 대한 연산처리를 목적으로 한 메서드는 해당 클래스 내부에 작성해야 함
3) 멤버 메서드는 클래스 밖에서 접근 가능하도록 public으로 설정해야 함

메서드/기능의 정의란 : 해당 메서드가 어떤 기능을 수행/실행할 것인지 정의하는 것

메서드의 호출이란 : 정의된 메서드의 내용대로 수행/실행 할 수 있도록 메서드명을 부르는 것
		  정의된 내용에 따라 단순 수행 후 반환 값이 없을 수도 있고, 있을 수도 있다

return : 메서드를 종료하고 호출한 곳으로 되돌아가는 것
	return 뒤에 값이 있다면 값과 함께 호출한 곳으로 돌아간다

public String ex10 {
	return "Hi";
}
위 메서드 상세히 해석 : 어디서든 접근 가능한(public) ex1이라는 이름의 메서드를 정의하고,
		      수행할 내용은 "Hi" 라는 문자열 값을 호출한 곳으로 되돌려주는 메서드이다.
		      return 값("Hi")의 자료형이 String이기 때문에, 메서드 정의 시 반환형에 String 을 작성했다